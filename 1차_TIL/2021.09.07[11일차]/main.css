body {
  margin: 0;
}

div {
  border: 1px solid black;
}

.text {
  /* default font size = 16px */
  font-size: 12px;
  /* 폰트의 모양을정함, 기울임 여부를 정한다. */
  /* italic체를 만들기 위해 주로 사용 */
  font-style: italic;
  /* font-style: oblique; 둘 중 하나를 씀*/
  /* 폰트의 굵기 보통 100단위 기본값 400 bold=700 굵게*/
  font-weight: bold;
  /* font family는 글꼴을 변경한다 */
  /* 보통 기본글꼴을 맑은 고딕 */
  /* 여러 글꼴을 나열하여 사용할수 없는 글꼴이 있을경우 다른 글꼴을 사용할 수 있게함 */
  font-family: Verdana, Tahoma, sans-serif;
  /* line height는 줄의 높이를 의미 */
  /* 글꼴별로 기본 높이가 다르다 */
  line-height: 2.0;
}

.ftext {
  /* font의 단축속성 size와 family는 필수 */
  /* size 20px fontfamily */
  /* font style
      font weight
      line height */
  font: italic 700 20px Verdana, Tahoma, sans-serif;
  color: red;
}

/* letter spacing, word spacing */
/* 글자, 단어간 간격 */
.text2 {
  /* default : normal */
  /* 5px = normal + 5px */
  /* %로도 조절가능 */
  letter-spacing: 5px;
  word-spacing: 2px;
  /* 텍스트 정렬 */
  /* text-align은 블럭요소에만 적용된다. */
  text-align: center;
}

/* text-indent 들여쓰기 */
/* text-indent도 블럭요소에만 적용됨 */
.paragraph {
  text-indent: 50px;
}

.text3 {
  text-indent: 20%;
}

/* text decoration */
/* 4가지 요소를 합친 shorthand */
/* 필수값은 text decoration line */
/* + style ,color, thickness */
/* mutilple text decoration이 하고싶다면 줄의 style은 따로 적어선 안된다 붙여서 적어야함 */
.textdeco {
  text-decoration: underline red wavy 5px;
}

/* word-break */
/* 언어권별로 동작법이 다름 */
/* normal : 기본줄바꿈법칙 */
/* break-all : 한중일 텍스트 안됨, keep-all : 한중일 텍스트에 적용 */
/* MDN참조 */
.textbr {
  width: 100px;
  background-color: aquamarine;
  word-break: break-all;
}

.textbr2 {
  width: 100px;
  background-color: aquamarine;
  word-break: keep-all;
}

/* text transform */
/* 한글에는 사용불가 */
/* 알파벳 터키어 일본어 등에 적용가능 */
.conatiner .textTrans:last-of-type {
  color: blue;
  text-transform: uppercase;
}


/* css의 값과 단위ㅣ */
/* 숫자 길이 백분율 */


/* 절대길이 px */
/* 시용자의 확대축소에 따라 길이가 달라질 수 있다 */
/* 전통적으로 하나의 점 */
.px {
  font-size: 24px;
}

/* 상대길이 */
/* em, rem */
/* 1em = 부모의 font-size */
/* 1rem = root의 font-size */


.par {
  /* 부모(root)의 2em인 32px */
  font-size: 2em;
  color: blue;
}

/* 글꼴 상대길이 - em, rem */
.em {
  color: red;
  /* 부모 .par의 1.5em인 48px */
  font-size: 1.5em;
}

.rem {
  font-size: 2rem;
}


/* 뷰포트 상대길이 - vw, vh */
/* vw, vh */
/* 뷰포트는 브라우저에 웹사이트를 볼수 있는 영역 */
/* 100vw 는 뷰포트의 너비, 100vh는 뷰포트의 높이 */
.vw {
  height: 50px;
  background-color: coral;
  width: 70vw;
}

/* vmin, vmax */
/* 가로모드 세로모드 */
/* 각 모드에 따라 더 긴놈이 vmax, 더 짧은놈이 vmin */

.vmax {
  background-color: blue;
  width: 30vmin;
  height: 30vmin;
}

/* 퍼센트 */
/* 부모요소의 백분률을 사용 */
/* viewport혹은 부모요소에 따라 CSS가 길이를 계산해서 보여준다. */
.percentP {
  width: 100px;
  height: 100px;
  background-color: darkgreen;
}

.percentC {
  height: 50%;
  width: 50%;
  background-color: darkkhaki;
}

/* 함수표기법 */
/* clac(), min(), max() */
/* calc는 calulate의 준말로 ()의 내용을 계산하여 반환하는 함수입니다. */
/* 사칙연산 사용가능 */
/* 연산자 좌우에 공백을 넣을것 */
.calc {
  width: calc(100% - 300px);
  height: 100px;
  background-color: goldenrod;
}

/* min(), max()의 안에는 ,를 사용하여 값을 나열*/
/* min(100%, 200px) 이면 둘중 작은것을 선택*/
/* min(100%, 200px) 이면 둘중 큰것을 선택*/
/* IE에서는 지원하지 않음 */

.min {
  width: min(200px, 100%);
  height: 100px;
  background-color: gray;
}

.max {
  width: max(200px, 100%);
  height: 100px;
  background-color: hotpink;
}

/* 박스모델 BoxModel */
/* 
  content : 콘텐츠 표시 영역
  padding : 콘텐츠와 테두리 사이의 내부 여백
  border : padding과 margin사이의 테두리
  margin : 가장 바깥쪽 레이어, 다른요소와의 공백역할을 한다.
 */

.box {
  width: 200px;
  height: 200px;
  padding: 20px;
  border: 20px solid blue;
  margin: 20px;
}

/* 크기 width, height */
/* width는 가로, height는 세로의 길이를 지정 */
/* 
    들어갈 수 있는 값으로는 거리값 <length>, %, 기본값은 auto
    상속은 되지 않는다.
  */

.block {
  background-color: khaki;
  width: 300px;
  height: 100px;
}

/* inline요소는 크기 지정을 할 수 없다. */
.inline {
  background-color: lawngreen;
  width: 300px;
  height: 100px;
}

/* (max)min-width, (max)min-height */
/* 기본값 auto */
/* IE에서 사용가능 */

#con {
  /* 가로는 부모의 50%를 차지하지만 400px이하로는 줄어들지 않는다. */
  width: 50%;
  min-width: 400px;
  height: 300px;
  background-color: lightcoral;
}

/* margin - 외부 여백 */
/* 박스모델의 가장 바깥쪽 */
/* 4가지 속성을 합친것이다. top right bottom left */
/* 초기값 0 */

.marginP {
  width: 300px;
  height: 200px;
  border: 5px solid blue;
}

/* margin: value -> 모든방향 */
/* margin: value1, value2 -> 위아래, 좌우 */
/* margin: value1, value2, value3 -> 위, 좌우, 아래 (시계방향)*/
/* margin: value1, value2, value3, value4 -> 위, 우, 아래, 좌 (시계방향)*/

/* margin의 값으로 %로 줄 수 있다. 기준값은 부모의 width값 */

.marginC {
 width:50px;
 height: 50px;
 border : 5px solid red; 
 margin: 10px;
}

/* 마진 상쇄 margin collapsing */
/* 여러 블록요소의 위/아래 margin이 경우에 따라 크기가 큰 margin으로 결합되는 현상 */
/* 다음과 같은 상황에 일어남 */

/* 1. 인접형제 : 두 형제요소의 위/아래 여백이 만나 발생 */
/* 2. 부모-자식요소간 : 부모 블록에 border, padding, inline-content가 없어서 부모자식간의 margin-top이 만나경우 */
/* 2-. 부모 블록에 border, padding, inlince-content가 없고, 부모-자식을 분리할 height값이 지정되지 않아 부모자식간 margin-bottom이 만나는경우*/
/* 3. 빈블록 border, padding, inlince-content가 없고 height도 존재하지 않으면 해당 블록의 margin-top, margin-bottom이 상쇄됨 */

.margincol {
  width :50px;
  height: 50px;
  background-color: lightseagreen;
  margin : 10px;
}

.margincolP{
  width: 100px;
  height: 100px;
  background-color: mediumvioletred;
  border:none;
  margin-top:30px;
}
.margincolC{
  width:30px;
  height:30px;
  background-color: navy;
  border:none;
  margin-top:70px;
}


/* padding : 내부여백, 단축속성 */
/* padding: value -> 모든방향 */
/* padding: value1, value2 -> 위아래, 좌우 */
/* padding: value1, value2, value3 -> 위, 좌우, 아래 (시계방향)*/
/* padding: value1, value2, value3, value4 -> 위, 우, 아래, 좌 (시계방향)*/

.paddingP{
  width: 300px;
  height: 300px;
  padding: 30px;
  background-color: seagreen;
}

.paddingC{
  width: 100px;
  height: 100px;
  /* 부모의 가로값의 10% */
  padding: 10%;
  background-color: red;
}

.paddingGC{
  width: 50px;
  height: 50px;
  background-color: silver;
}

/* 테두리 border-[style, color, width] */
/* 기본값 none */

/* boder-style은 테두리의 모양을 정함 */
/* border-width는 테두리의 두께 length값이나 thin, medium, thick도 쓸수 있다 */
/* border-color 테두리 색상지정 */
/* 위 스타일들은 여러개를 사용해 각 면의 스타일을 다르게 줄수 있다. 방향은 시계방향 */

.borderSWC{
  width:300px;
  height: 300px;
  background-color: tan;
  border-width: 10px;
  border-style: dashed solid;
  border-color: black red;
}

/* 위 스타일을 border속성에 shorthand로 작성할수있다. */

.borderShort{
  width:300px;
  height: 300px;
  background-color: blueviolet;
  border: 10px solid chartreuse;
}

/* border-radius */
/* 요소 테두리 경계의 꼭짓점을 둥글게 만듬 */
/* 값으론 length나 %사용가능 %의 기준값은 각각의 width, height에 따른다 */
/* 4개 값을 차례로 이벽해 왼쪽 위 모서리부터 시계방향으로 입력가능 */
.borderR{
  width:300px;
  height: 300px;
  background-color: skyblue;
  border: 10px solid red;
  border-radius: 150px;
}

/* boxsizing */
/* 요소의 너비와 높이를 계산하는 방법을 지정한다. */
/* content-box : default */
/* border-box :  */

.notboxsizing{
  width: 300px;
  height: 200px;
  background-color: darkseagreen;
  border:30px solid blue;
  padding: 40px;
}
.boxsizing{
  width: 300px;
  height: 200px;
  background-color: darkseagreen;
  border:30px solid blue;
  padding: 20px;
  box-sizing: border-box;
}
